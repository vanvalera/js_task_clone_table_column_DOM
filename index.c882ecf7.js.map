{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAW,EAAG,SAAS,gBAAgB,CAAC,OACxC,EAAQ,EAAG,SAAS,gBAAgB,CAAC,OAE3C,SAAS,EAAY,CAAW,EAC9B,IAAM,EAAK,SAAS,aAAa,CAAC,MAIlC,OAFA,EAAG,WAAW,CAAG,EAEV,CACT,CAEA,IAAM,EAAe,CAAO,CAAC,EAAE,CAAC,WAAW,CAI3C,CAAO,CAAC,EAAE,CAAC,qBAAqB,CAAC,cAAe,EAF3B,IAIrB,CAAO,CAAC,EAAE,CAAC,qBAAqB,CAAC,cAAe,EAJ3B,IAMrB,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAS,EAAG,EAAI,gBAAgB,CAAC,OAEvC,GAAI,EAAM,MAAM,CAAG,EAAG,CACpB,IAAM,EAAU,SAAS,aAAa,CAAC,KAEvC,CAAA,EAAQ,WAAW,CAAG,CAAK,CAAC,EAAE,CAAC,WAAW,CAE1C,EAAI,YAAY,CAAC,EAAQ,SAAS,CAAC,CAAA,GAAO,CAAK,CAAC,EAAE,CACpD,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar columns = _to_consumable_array(document.querySelectorAll(\"th\"));\nvar rows = _to_consumable_array(document.querySelectorAll(\"tr\"));\nfunction createNewTh(textContent) {\n    var th = document.createElement(\"th\");\n    th.textContent = textContent;\n    return th;\n}\nvar copiedColumn = columns[1].textContent;\nvar newThContent = copiedColumn;\ncolumns[4].insertAdjacentElement(\"beforebegin\", createNewTh(newThContent));\ncolumns[9].insertAdjacentElement(\"beforebegin\", createNewTh(newThContent));\nrows.forEach(function(row) {\n    var cells = _to_consumable_array(row.querySelectorAll(\"td\"));\n    if (cells.length > 1) {\n        var newCell = document.createElement(\"td\");\n        newCell.textContent = cells[1].textContent;\n        row.insertBefore(newCell.cloneNode(true), cells[4]);\n    }\n});\n\n//# sourceMappingURL=index.c882ecf7.js.map\n","'use strict';\n\nconst columns = [...document.querySelectorAll('th')];\nconst rows = [...document.querySelectorAll('tr')];\n\nfunction createNewTh(textContent) {\n  const th = document.createElement('th');\n\n  th.textContent = textContent;\n\n  return th;\n}\n\nconst copiedColumn = columns[1].textContent;\n\nconst newThContent = copiedColumn;\n\ncolumns[4].insertAdjacentElement('beforebegin', createNewTh(newThContent));\n\ncolumns[9].insertAdjacentElement('beforebegin', createNewTh(newThContent));\n\nrows.forEach((row) => {\n  const cells = [...row.querySelectorAll('td')];\n\n  if (cells.length > 1) {\n    const newCell = document.createElement('td');\n\n    newCell.textContent = cells[1].textContent;\n\n    row.insertBefore(newCell.cloneNode(true), cells[4]);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","columns","document","querySelectorAll","rows","createNewTh","textContent","th","createElement","copiedColumn","insertAdjacentElement","forEach","row","cells","newCell","insertBefore","cloneNode"],"version":3,"file":"index.c882ecf7.js.map"}